class Solution {
    public String dayOfTheWeek(int day, int month, int year) {
        String[] week = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
        int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30};         //只用存储前十一个月，因为如果要算12月份，只可能按天数算
        
        int days = (year - 1971) * 365 + (year - 1969) / 4;                 //要加上闰年多的一天
        for(int i = 0; i < (month - 1); i++){
            days += monthDays[i];
        }
        if(((year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0)) && month >= 3){
            days++;
        }
        days += day;
        return week[(days+3) % 7];
    }
}

/*
执行用时:0 ms ，在所有Java提交中击败了100.00%的用户
内存消耗:35.6 MB，在所有Java提交中击败了52.12%的用户

### 思路
- 模拟
- 计算过程
	1. 输入的年份`year.1.1`与`1970.12.31`之间的天数
	2. 输入的月份`month.1`与`1.1`之间的天数
	3. 输入的日期`day`与`1`之间的天数
	4. 因为`1970.12.31`是星期四，所以可以根据中间间隔的天数`days`，加上`3`，再余`7`即可求得这天是周几
- 注意
	1. 闰年：`(year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)`
	2. 计算年之间的间隔的时候，没有考虑到的闰年多的天数要加上去，也就是`(year - 1969) / 4`
	3. 在计算月份之间的间隔的时候，不用计算12月份的，因为一旦涉及到12月份，要么是已经过了这一年，要么是只剩下12月份，只用计算天数不用计算月份间隔了
### 感悟
- 求年份之类的有规律的东西，主要要找规律
- 考虑计算中的细节
- 比如存储周几，就可以用数组
*/
